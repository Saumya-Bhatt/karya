name: Build and Publish Docker Images

on:
  push:
    branches:
      - main
      - fix
#    paths:
#      - 'servers/server/**'
#      - 'servers/executor/**'
#      - 'servers/scheduler/**'
#      - 'connectors/**'
#      - 'core/**'
#      - 'data/**'
#      - 'gradle/**'
#      - 'build.gradle.kts'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
      repo_owner_lowercase: ${{ steps.set-repo-owner.outputs.repo_owner_lowercase }}
#      skip_publish: ${{ steps.check_tag.outputs.skip_publish }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version from build.gradle.kts
        id: set-version
        run: |
          VERSION=$(grep -oP 'version\s*=\s*"\K[0-9\.]+' build.gradle.kts)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

#      - name: Check if tag exists
#        id: check_tag
#        run: |
#          VERSION="${{ steps.set-version.outputs.version }}"
#          if git tag -l "servers-v$VERSION" | grep -q "servers-v$VERSION"; then
#            echo "Tag servers-v$VERSION already exists, skipping publish"
#            echo "skip_publish=true" >> $GITHUB_OUTPUT
#          else
#            echo "Tag servers-v$VERSION does not exist, proceeding with publish"
#            echo "skip_publish=false" >> $GITHUB_OUTPUT
#          fi

      - name: Set repository owner to lowercase
        id: set-repo-owner
        run: |
          REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')
          echo "repo_owner_lowercase=$REPO_OWNER" >> $GITHUB_OUTPUT

  build_and_push:
    needs: setup
#    if: needs.setup.outputs.skip_publish != 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - server
          - executor
          - scheduler
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image to Github Container Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./servers/${{ matrix.image }}/deploy/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ needs.setup.outputs.repo_owner_lowercase }}/karya-${{ matrix.image }}:${{ needs.setup.outputs.version }}
            ghcr.io/${{ needs.setup.outputs.repo_owner_lowercase }}/karya-${{ matrix.image }}:latest
          platforms: linux/amd64,linux/arm64

#      - name: Create GitHub Release for Docker Image
#        if: env.skip_publish != 'true'
#        run: |
#          VERSION="${{ needs.setup.outputs.version }}"
#          git tag "servers-v$VERSION"
#          git push origin "servers-v$VERSION"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./servers/${{ matrix.image }}/deploy/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/karya-${{ matrix.image }}:${{ needs.setup.outputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/karya-${{ matrix.image }}:latest
          platforms: linux/amd64,linux/arm64
